package cognoRiseInfotech;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Stack;

public class Calculator {
    private JFrame frame;
    private JTextField display;
    private JButton[] buttons;
    private String[] buttonLabels = {
            "7", "8", "9", "/",
            "4", "5", "6", "*",
            "1", "2", "3", "-",
            "0", ".", "=", "+",
            "C", "DEL", "√", "^"
    };
    private Stack<Double> operands;
    private char lastOperator;

    public Calculator() {
        frame = new JFrame("Calculator");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());

        display = new JTextField();
        display.setEditable(false);
        frame.add(display, BorderLayout.NORTH);

        JPanel buttonPanel = new JPanel(new GridLayout(5, 4));
        buttons = new JButton[buttonLabels.length];

        for (int i = 0; i < buttonLabels.length; i++) {
            buttons[i] = new JButton(buttonLabels[i]);
            buttons[i].addActionListener(new ButtonClickListener());
            buttonPanel.add(buttons[i]);
        }

        frame.add(buttonPanel, BorderLayout.CENTER);

        operands = new Stack<>();
        lastOperator = ' ';
    }

    private class ButtonClickListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String command = e.getActionCommand();

            switch (command) {
                case "=":
                    calculateResult();
                    break;
                case "C":
                    clear();
                    break;
                case "DEL":
                    deleteLastDigit();
                    break;
                case "√":
                    calculateSquareRoot();
                    break;
                case "^":
                    setLastOperator('^');
                    break;
                default:
                    processInput(command);
            }
        }
    }

    private void processInput(String input) {
        display.setText(display.getText() + input);
    }

    private void calculateResult() {
        if (!display.getText().isEmpty()) {
            operands.push(Double.parseDouble(display.getText()));

            double result = operands.pop();
            while (!operands.isEmpty()) {
                double operand = operands.pop();
                switch (lastOperator) {
                    case '+':
                        result += operand;
                        break;
                    case '-':
                        result -= operand;
                        break;
                    case '*':
                        result *= operand;
                        break;
                    case '/':
                        result /= operand;
                        break;
                    case '^':
                        result = Math.pow(result, operand);
                        break;
                }
            }

            display.setText(Double.toString(result));
        }
    }

    private void clear() {
        display.setText("");
        operands.clear();
        lastOperator = ' ';
    }

    private void deleteLastDigit() {
        String currentText = display.getText();
        if (!currentText.isEmpty()) {
            display.setText(currentText.substring(0, currentText.length() - 1));
        }
    }

    private void calculateSquareRoot() {
        if (!display.getText().isEmpty()) {
            double operand = Double.parseDouble(display.getText());
            double result = Math.sqrt(operand);
            display.setText(Double.toString(result));
        }
    }

    private void setLastOperator(char operator) {
        if (!display.getText().isEmpty()) {
            operands.push(Double.parseDouble(display.getText()));
            lastOperator = operator;
            display.setText("");
        }
    }

    public void display() {
        frame.pack();
        frame.setVisible(true);
    }

    public static void main(String[] args) {
        Calculator calculator = new Calculator();
        calculator.display();
    }
}
